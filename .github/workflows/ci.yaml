name: ci

on:
    push:
        branches:
            - main
        paths:
            - "**.py"
            - "**.css"
            - "**.js"
            - "**.json"
            - "**.xml"
            - "**/poxy/data/*"
            - "**/workflows/**.yaml"
            - "requirements.txt"
    pull_request:
        branches:
            - main
        paths:
            - "**.py"
            - "**.css"
            - "**.js"
            - "**.json"
            - "**.xml"
            - "**/poxy/data/*"
            - "**/workflows/**.yaml"
            - "requirements.txt"
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    clang_version: "14"
    gcc_version: "11"

jobs:
    linux:
        strategy:
            fail-fast: false
            matrix:
                compiler:
                    - "clang"
                linker:
                    - "lld"
                python:
                    - "3.7"
                    - "3.8"
                    - "3.9"
                    - "3.10"
                doxygen_tag:
                    #- "Release_1_8_17"
                    #- "Release_1_8_18"
                    #- "Release_1_8_19"
                    #- "Release_1_8_20"
                    #- "Release_1_9_0"
                    #- "Release_1_9_1"
                    #- "Release_1_9_2"
                    #- "Release_1_9_3"
                    #- "Release_1_9_4"
                    #- "Release_1_9_5"
                    #- "Release_1_9_6"
                    - "none"

        runs-on: ubuntu-latest

        defaults:
            run:
                shell: bash

        steps:
            - name: Install base dependencies
              run: |
                  sudo add-apt-repository ppa:deadsnakes/ppa
                  sudo apt -y update
                  sudo apt -y install --no-install-recommends git python3-pip

            - name: Install compiler dependencies
              if: ${{ matrix.doxygen_tag != 'none' }}
              run: |
                  sudo apt -y install --no-install-recommends cmake flex bison libstdc++-${{ env.gcc_version }}-dev

            - name: Install lld
              if: ${{ matrix.doxygen_tag != 'none' && startsWith(matrix.linker, 'lld') }}
              run: |
                  sudo apt -y install --no-install-recommends lld-${{ env.clang_version }}
                  sudo update-alternatives --install /usr/bin/ld.lld ld.lld /usr/bin/ld.lld-${{ env.clang_version }} 1000

            - name: Install clang
              if: ${{ matrix.doxygen_tag != 'none' && startsWith(matrix.compiler, 'clang') }}
              run: |
                  sudo apt -y install --no-install-recommends clang-${{ env.clang_version }}
                  sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-${{ env.clang_version }} 1000
                  sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-${{ env.clang_version }} 1000

            - name: Install gcc
              if: ${{ matrix.doxygen_tag != 'none' && startsWith(matrix.compiler, 'gcc') }}
              run: |
                  sudo apt -y install --no-install-recommends gcc-${{ env.gcc_version }} g++-${{ env.gcc_version }}
                  sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${{ env.gcc_version }} 1000
                  sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${{ env.gcc_version }} 1000

            - name: Install python
              run: |
                  sudo apt install
                  sudo apt install python${{ matrix.python }} python${{ matrix.python }}-distutils
                  sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${{ matrix.python }} 1000
                  sudo python3 -m pip install pip

            - uses: actions/checkout@v3
              with:
                  path: poxy

            - name: Install python dependencies
              run: |
                  cd "${{ github.workspace }}/poxy"
                  sudo python3 -m pip install --upgrade --requirement requirements.txt

            - name: Install poxy
              run: |
                  cd "${{ github.workspace }}/poxy"
                  sudo python3 -m pip install -e .

            - name: Print poxy help
              run: |
                  poxy --help

            - name: Build and install doxygen
              if: ${{ matrix.doxygen_tag != 'none' }}
              run: |
                  cd "${{ github.workspace }}"
                  git clone --depth 1 --branch ${{ matrix.doxygen_tag }} https://github.com/doxygen/doxygen.git
                  cd doxygen
                  mkdir build
                  cd build
                  CC=cc CC_LD=${{ matrix.linker }} CXX=c++ CXX_LD=${{ matrix.linker }} cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel ..
                  CC=cc CC_LD=${{ matrix.linker }} CXX=c++ CXX_LD=${{ matrix.linker }} make -j
                  CC=cc CC_LD=${{ matrix.linker }} CXX=c++ CXX_LD=${{ matrix.linker }} sudo make install
